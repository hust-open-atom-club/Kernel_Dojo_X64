#!/bin/sh
# Using /bin/sh for broader compatibility in initvm environments

FW_CFG_PATH="/sys/firmware/qemu_fw_cfg/by_name/opt/guest/flag_content/raw"
DEST_FLAG_PATH="/flag"

# Ensure the script exits on first error if that's desired, but for init scripts,
# sometimes it's better to report errors and continue if possible.
# set -e

if [ -e "$FW_CFG_PATH" ]; then
    # Attempt to copy the flag. Use -f to overwrite if DEST_FLAG_PATH somehow exists.
    if cp -f "$FW_CFG_PATH" "$DEST_FLAG_PATH"; then
        chown root:root "$DEST_FLAG_PATH"
        chmod 400 "$DEST_FLAG_PATH" # Read-only for root
        echo "Guest $DEST_FLAG_PATH created from fw_cfg."

        # Check if the flag file has content before trying to set the password
        if [ -s "$DEST_FLAG_PATH" ]; then # -s checks if file exists and has size > 0
            # Read the first line of the flag and remove any trailing newlines/carriage returns
            # This is important as passwords usually don't contain them.
            FLAG_PASSWORD=$(head -n 1 "$DEST_FLAG_PATH" | tr -d '\n\r')

            if [ -n "$FLAG_PASSWORD" ]; then # Check if FLAG_PASSWORD is not an empty string
                echo "Attempting to set root password using 'passwd'..."

                # Try to use passwd with --stdin first, as it's cleaner and more reliable if supported
                # We check if --stdin is mentioned in passwd's help output
                # Redirect stderr to stdout for grep because help might go to stderr
                if passwd --help 2>&1 | grep -q -- "--stdin"; then
                    echo "Info: 'passwd --stdin' seems to be supported."
                    echo "$FLAG_PASSWORD" | passwd --stdin root
                    if [ $? -eq 0 ]; then
                        echo "Root password successfully changed using 'passwd --stdin'."
                    else
                        echo "Error: 'passwd --stdin' failed. Attempting fallback method."
                        # Fallback: Send password twice, separated by a newline.
                        # Using printf for better portability than echo -e.
                        printf "%s\n%s\n" "$FLAG_PASSWORD" "$FLAG_PASSWORD" | passwd root
                        if [ $? -eq 0 ]; then
                            echo "Root password successfully changed using 'passwd' (newline method)."
                        else
                            echo "Error: Failed to change root password using 'passwd' (newline method)."
                        fi
                    fi
                else
                    echo "Info: 'passwd --stdin' not detected in help. Using newline method directly."
                    # If --stdin is not detected, directly use the newline method
                    printf "%s\n%s\n" "$FLAG_PASSWORD" "$FLAG_PASSWORD" | passwd root
                    if [ $? -eq 0 ]; then
                        echo "Root password successfully changed using 'passwd' (newline method)."
                    else
                        echo "Error: Failed to change root password using 'passwd' (newline method)."
                    fi
                fi
            else
                echo "Error: $DEST_FLAG_PATH content is empty after reading. Root password not changed."
            fi
        else
            echo "Error: $DEST_FLAG_PATH was created but is empty (file size 0). Root password not changed."
        fi
    else
        echo "Error: Failed to copy $FW_CFG_PATH to $DEST_FLAG_PATH. Password not changed."
    fi
else
    echo "Error: fw_cfg entry for flag not found at $FW_CFG_PATH. Password not changed."
fi

# Optional: Consider removing the flag file if the password was successfully set
# and it's no longer needed and contains sensitive information.
# Example (needs a variable to track success):
# if [ "$PASSWORD_SET_SUCCESSFULLY" = "yes" ]; then
#    echo "Removing $DEST_FLAG_PATH for security."
#    rm -f "$DEST_FLAG_PATH"
# fi
